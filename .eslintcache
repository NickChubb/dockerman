[{"/home/nick/dev/dockerman/src/index.js":"1","/home/nick/dev/dockerman/src/App.js":"2","/home/nick/dev/dockerman/src/reportWebVitals.js":"3","/home/nick/dev/dockerman/src/components/Header.js":"4","/home/nick/dev/dockerman/src/components/Button.js":"5","/home/nick/dev/dockerman/src/components/Status.js":"6","/home/nick/dev/dockerman/src/components/Display.js":"7","/home/nick/dev/dockerman/src/components/Footer.js":"8","/home/nick/dev/dockerman/src/components/Container.js":"9","/home/nick/dev/dockerman/src/components/Containers.js":"10","/home/nick/dev/dockerman/src/components/api/container.js":"11","/home/nick/dev/dockerman/src/Routes.js":"12","/home/nick/dev/dockerman/src/page/ContainerPage.js":"13","/home/nick/dev/dockerman/src/page/MainPage.js":"14","/home/nick/dev/dockerman/src/page/LoginPage.js":"15","/home/nick/dev/dockerman/src/components/api/login.js":"16","/home/nick/dev/dockerman/src/components/useToken.js":"17","/home/nick/dev/dockerman/src/components/InfoField.js":"18","/home/nick/dev/dockerman/src/components/Images.js":"19","/home/nick/dev/dockerman/src/components/api/image.js":"20","/home/nick/dev/dockerman/src/components/Image.js":"21","/home/nick/dev/dockerman/src/components/DisplayImages.js":"22","/home/nick/dev/dockerman/src/components/DisplayContainers.js":"23","/home/nick/dev/dockerman/src/components/SystemInfo.js":"24","/home/nick/dev/dockerman/src/components/api/system.js":"25","/home/nick/dev/dockerman/src/components/api/helpers.js":"26","/home/nick/dev/dockerman/src/components/DisplayRepo.js":"27","/home/nick/dev/dockerman/src/components/Repos.js":"28","/home/nick/dev/dockerman/src/components/Repo.js":"29","/home/nick/dev/dockerman/src/components/DisplayNew.js":"30","/home/nick/dev/dockerman/src/components/Serve.js":"31"},{"size":658,"mtime":1612117584047,"results":"32","hashOfConfig":"33"},{"size":368,"mtime":1613463624079,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1610780794789,"results":"35","hashOfConfig":"33"},{"size":375,"mtime":1614378288166,"results":"36","hashOfConfig":"33"},{"size":222,"mtime":1612226446861,"results":"37","hashOfConfig":"33"},{"size":4045,"mtime":1613694439589,"results":"38","hashOfConfig":"33"},{"size":828,"mtime":1614657657781,"results":"39","hashOfConfig":"33"},{"size":178,"mtime":1612232317317,"results":"40","hashOfConfig":"33"},{"size":646,"mtime":1616109960156,"results":"41","hashOfConfig":"33"},{"size":280,"mtime":1612412105174,"results":"42","hashOfConfig":"33"},{"size":1550,"mtime":1613693457461,"results":"43","hashOfConfig":"33"},{"size":798,"mtime":1614381150597,"results":"44","hashOfConfig":"33"},{"size":563,"mtime":1612230908282,"results":"45","hashOfConfig":"33"},{"size":195,"mtime":1613718460054,"results":"46","hashOfConfig":"33"},{"size":1327,"mtime":1612132887900,"results":"47","hashOfConfig":"33"},{"size":544,"mtime":1612143838299,"results":"48","hashOfConfig":"33"},{"size":528,"mtime":1612120829943,"results":"49","hashOfConfig":"33"},{"size":215,"mtime":1612231160814,"results":"50","hashOfConfig":"33"},{"size":240,"mtime":1613719156622,"results":"51","hashOfConfig":"33"},{"size":461,"mtime":1614319646025,"results":"52","hashOfConfig":"33"},{"size":193,"mtime":1614320463525,"results":"53","hashOfConfig":"33"},{"size":969,"mtime":1614653900829,"results":"54","hashOfConfig":"33"},{"size":1133,"mtime":1614653905273,"results":"55","hashOfConfig":"33"},{"size":918,"mtime":1614383125198,"results":"56","hashOfConfig":"33"},{"size":520,"mtime":1614378537202,"results":"57","hashOfConfig":"33"},{"size":373,"mtime":1614377722219,"results":"58","hashOfConfig":"33"},{"size":918,"mtime":1614718606172,"results":"59","hashOfConfig":"33"},{"size":500,"mtime":1614718594632,"results":"60","hashOfConfig":"33"},{"size":250,"mtime":1614657061973,"results":"61","hashOfConfig":"33"},{"size":2726,"mtime":1614718768136,"results":"62","hashOfConfig":"33"},{"size":808,"mtime":1616110035136,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},"12zq7o2",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"67"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"67"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"67"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"67"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"67"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/nick/dev/dockerman/src/index.js",["134"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport { homepage } from '../package.json';\n\nReactDOM.render(\n  <Router basename={homepage}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["135","136"],"/home/nick/dev/dockerman/src/App.js",[],"/home/nick/dev/dockerman/src/reportWebVitals.js",[],"/home/nick/dev/dockerman/src/components/Header.js",[],"/home/nick/dev/dockerman/src/components/Button.js",[],"/home/nick/dev/dockerman/src/components/Status.js",["137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153"],"import Button from './Button';\nimport { useState, useEffect } from 'react';\nimport { startContainer, stopContainer, removeContainer, fetchContainerInfo } from './api/container';\n\n\nconst Status = ({ containerState, id }) => {\n\n    const [state, setState] = useState(containerState);\n    \n    const getContainerState = async (expect = \"\") => {\n        let container = await fetchContainerInfo(id);\n        let status = container.State.Status;\n        if (expect == \"\" || expect == status ){\n            setState(status);\n        }\n        return status;\n    }\n\n    useEffect(() => {\n        getContainerState();\n    }, []);\n\n    const getState = (state) => {\n        console.log(\"state in getState: \" + state);\n        return state === 'running' ? '✅' : '🛑' ;\n    }\n\n    const stopOnClick = async (id) => {\n        const expected = \"exited\";\n\n        stopContainer(id);\n        let status = await getContainerState(expected);\n\n        if (status != expected) {\n            setState(\"loading\");\n        } \n        while (status != expected) {\n            let status = await getContainerState(expected);\n        }\n    }\n\n    const startOnClick = async (id) => {\n        const expected = \"running\";\n\n        startContainer(id); \n        let status = await getContainerState(expected);\n\n        if (status != expected) {\n            setState(\"loading\");\n        } \n        while (status != expected) {\n            status = await getContainerState(expected);\n        }\n    }\n\n    const removeOnClick = async (id) => {\n        const expected = \"running\";\n\n        removeContainer(id); \n        let status = await getContainerState(expected);\n\n        if (status != expected) {\n            setState(status);\n        } \n        while (status == \"removing\") {\n            status = await getContainerState(expected);\n        }\n    }\n\n    const restartOnClick = async (id) => {\n        const expected = \"running\";\n\n        // removeContainer(id); \n        let status = await getContainerState(expected);\n\n        if (status != expected) {\n            setState(status);\n        }\n        while (status == \"restarting\") {\n            status = await getContainerState(expected);\n        }\n    }\n\n    const setButton = (status, id) => {\n        switch (status) {\n            case 'running': \n                return (\n                    <>\n                        <Button color='red' text='stop' onClick={() => { stopOnClick(id) }} />\n                        <Button color='blue' text='Restart' onClick={() => { restartOnClick(id) }} disabled={true}/>\n                    </>\n                );\n                break;\n            case 'exited':\n                return (\n                    <>\n                        <Button color='green' text='start' onClick={() => { startOnClick(id) }}/>\n                        <Button color='black' text='remove' onClick={() => { removeOnClick(id) }}/>\n                    </>\n                );\n                break;\n            case 'loading':\n                return (\n                    <>\n                        <Button color='grey' text='loading...' disabled={true} />\n                        <Button color='blue' text='Restart' onClick={() => { restartOnClick(id) }} disabled={true}/>\n                    </>\n                );\n                break;\n            case 'removing':\n                return (\n                    <>\n                        <Button color='grey' text='loading...' disabled={true} />\n                    </>\n                );\n                break;\n            default:\n                return (\n                    <>\n                        <Button color='black' text='remove' onClick={() => { removeOnClick(id) }}/>\n                        <Button color='blue' text='Restart' onClick={() => { restartOnClick(id) }} disabled={true}/>\n                    </>\n                );\n                break;\n        }\n    }\n\n    return (\n        <>\n            status: {getState(state)} <small>({state})</small>\n            {setButton(state, id)}\n        </>\n    )\n}\n\nexport default Status\n","/home/nick/dev/dockerman/src/components/Display.js",[],"/home/nick/dev/dockerman/src/components/Footer.js",[],"/home/nick/dev/dockerman/src/components/Container.js",["154","155"],"import Button from './Button';\nimport Status from './Status';\nimport Serve from './Serve';\nimport { Link } from 'react-router-dom';\n\nconst Container = ({container, key}) => {\n\n    const name = container.Names[0].substring(1);\n\n    const restart = (id) => {\n        \n    }\n\n    return (\n        <div className='container'>\n            <Link to={`/container/${name}`}>\n                <h2>{container.Names[0].substring(1)}</h2>\n            </Link>\n            <Status state={container.State} id={container.Id} />\n            <Serve />\n        </div>\n    )\n}\n\n// Container.defaultProps = {\n//     title: 'Container',\n// }\n\nexport default Container;\n","/home/nick/dev/dockerman/src/components/Containers.js",[],"/home/nick/dev/dockerman/src/components/api/container.js",[],"/home/nick/dev/dockerman/src/Routes.js",["156"],"import React, { useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport useToken from './components/useToken';\n\n/**\n * Import all page components here\n */\nimport MainPage from './page/MainPage';\nimport ContainerPage from './page/ContainerPage';\nimport LoginPage from './page/LoginPage';\n\n/**\n * All routes go here.\n * Don't forget to import the components above after adding new route.\n */\nconst Routes = () => {\n\n    const { token, setToken } = useToken();\n\n    if(!token) {\n      return <LoginPage setToken={setToken} />\n    }\n\n    return (\n    <Switch>\n        \n        <Route path=\"/container/:containerId\">\n          <ContainerPage />\n        </Route>\n\n        <Route path=\"/\">\n          <MainPage />\n        </Route>\n\n      </Switch>\n    )\n}\n\nexport default Routes;\n","/home/nick/dev/dockerman/src/page/ContainerPage.js",["157"],"import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchContainerInfo } from '../components/api/container';\nimport InfoField from '../components/InfoField';\n\n\nconst ContainerPage = () => {\n\n    let { containerId } = useParams();\n    let container = fetchContainerInfo(containerId).then((container) => {console.log(container)});\n\n    return (\n        <div className='display'>\n            <h2>{containerId}</h2>\n            <InfoField title=\"Ports\" />\n            <h3>Logs</h3>\n\n        </div>\n    )\n}\n\nexport default ContainerPage;\n","/home/nick/dev/dockerman/src/page/MainPage.js",[],"/home/nick/dev/dockerman/src/page/LoginPage.js",[],"/home/nick/dev/dockerman/src/components/api/login.js",["158"],"import { homepage } from '../../../package.json';\n\n// Fetch individual container from API based on ID and return it\nexport const loginUser = async (credentials) => {\n    \n    let response = await fetch(`${homepage}/login`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n    });\n\n    let status = response.status;\n    if (status != 200){\n        alert('ERROR: invalid credentials.');\n    }\n\n    let data = await response.json();\n    return data;\n}","/home/nick/dev/dockerman/src/components/useToken.js",[],"/home/nick/dev/dockerman/src/components/InfoField.js",[],"/home/nick/dev/dockerman/src/components/Images.js",[],"/home/nick/dev/dockerman/src/components/api/image.js",[],"/home/nick/dev/dockerman/src/components/Image.js",[],"/home/nick/dev/dockerman/src/components/DisplayImages.js",[],"/home/nick/dev/dockerman/src/components/DisplayContainers.js",[],"/home/nick/dev/dockerman/src/components/SystemInfo.js",[],"/home/nick/dev/dockerman/src/components/api/system.js",[],"/home/nick/dev/dockerman/src/components/api/helpers.js",[],"/home/nick/dev/dockerman/src/components/DisplayRepo.js",[],"/home/nick/dev/dockerman/src/components/Repos.js",["159"],"import Repo from './Repo.js';\nimport { Link } from 'react-router-dom';\n\nconst Repos = ({ repos }) => {\n    return (\n        <>\n            {\n                repos.legth != 0\n                ?\n                <div className='container'>No Containers, <Link to={'/new'}>click here</Link> to add new Container.</div> \n                : \n                repos.map((repo, i) => (\n                    <Repo key={i} repo={repo} />\n                ))\n            }\n        </>\n    )\n}\n\nexport default Repos;\n","/home/nick/dev/dockerman/src/components/Repo.js",[],"/home/nick/dev/dockerman/src/components/DisplayNew.js",[],"/home/nick/dev/dockerman/src/components/Serve.js",["160","161"],{"ruleId":"162","severity":1,"message":"163","line":3,"column":35,"nodeType":"164","messageId":"165","endLine":3,"endColumn":40},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":13,"column":20,"nodeType":"172","messageId":"173","endLine":13,"endColumn":22},{"ruleId":"170","severity":1,"message":"171","line":13,"column":36,"nodeType":"172","messageId":"173","endLine":13,"endColumn":38},{"ruleId":"174","severity":1,"message":"175","line":21,"column":8,"nodeType":"176","endLine":21,"endColumn":10,"suggestions":"177"},{"ruleId":"170","severity":1,"message":"178","line":34,"column":20,"nodeType":"172","messageId":"173","endLine":34,"endColumn":22},{"ruleId":"170","severity":1,"message":"178","line":37,"column":23,"nodeType":"172","messageId":"173","endLine":37,"endColumn":25},{"ruleId":"162","severity":1,"message":"179","line":38,"column":17,"nodeType":"164","messageId":"165","endLine":38,"endColumn":23},{"ruleId":"170","severity":1,"message":"178","line":48,"column":20,"nodeType":"172","messageId":"173","endLine":48,"endColumn":22},{"ruleId":"170","severity":1,"message":"178","line":51,"column":23,"nodeType":"172","messageId":"173","endLine":51,"endColumn":25},{"ruleId":"170","severity":1,"message":"178","line":62,"column":20,"nodeType":"172","messageId":"173","endLine":62,"endColumn":22},{"ruleId":"170","severity":1,"message":"171","line":65,"column":23,"nodeType":"172","messageId":"173","endLine":65,"endColumn":25},{"ruleId":"170","severity":1,"message":"178","line":76,"column":20,"nodeType":"172","messageId":"173","endLine":76,"endColumn":22},{"ruleId":"170","severity":1,"message":"171","line":79,"column":23,"nodeType":"172","messageId":"173","endLine":79,"endColumn":25},{"ruleId":"180","severity":1,"message":"181","line":93,"column":17,"nodeType":"182","messageId":"183","endLine":93,"endColumn":23},{"ruleId":"180","severity":1,"message":"181","line":101,"column":17,"nodeType":"182","messageId":"183","endLine":101,"endColumn":23},{"ruleId":"180","severity":1,"message":"181","line":109,"column":17,"nodeType":"182","messageId":"183","endLine":109,"endColumn":23},{"ruleId":"180","severity":1,"message":"181","line":116,"column":17,"nodeType":"182","messageId":"183","endLine":116,"endColumn":23},{"ruleId":"180","severity":1,"message":"181","line":124,"column":17,"nodeType":"182","messageId":"183","endLine":124,"endColumn":23},{"ruleId":"162","severity":1,"message":"184","line":1,"column":8,"nodeType":"164","messageId":"165","endLine":1,"endColumn":14},{"ruleId":"162","severity":1,"message":"185","line":10,"column":11,"nodeType":"164","messageId":"165","endLine":10,"endColumn":18},{"ruleId":"162","severity":1,"message":"186","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"187","line":10,"column":9,"nodeType":"164","messageId":"165","endLine":10,"endColumn":18},{"ruleId":"170","severity":1,"message":"178","line":15,"column":16,"nodeType":"172","messageId":"173","endLine":15,"endColumn":18},{"ruleId":"170","severity":1,"message":"178","line":8,"column":29,"nodeType":"172","messageId":"173","endLine":8,"endColumn":31},{"ruleId":"162","severity":1,"message":"186","line":2,"column":10,"nodeType":"164","messageId":"165","endLine":2,"endColumn":18},{"ruleId":"162","severity":1,"message":"188","line":4,"column":10,"nodeType":"164","messageId":"165","endLine":4,"endColumn":20},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","no-native-reassign",["189"],"no-negated-in-lhs",["190"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getContainerState'. Either include it or remove the dependency array.","ArrayExpression",["191"],"Expected '!==' and instead saw '!='.","'status' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Button' is defined but never used.","'restart' is assigned a value but never used.","'useState' is defined but never used.","'container' is assigned a value but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},"Update the dependencies array to be: [getContainerState]",{"range":"194","text":"195"},[617,619],"[getContainerState]"]