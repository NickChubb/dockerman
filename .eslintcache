[{"/home/nick/dev/dockerman/src/index.js":"1","/home/nick/dev/dockerman/src/App.js":"2","/home/nick/dev/dockerman/src/reportWebVitals.js":"3","/home/nick/dev/dockerman/src/components/Header.js":"4","/home/nick/dev/dockerman/src/components/Button.js":"5","/home/nick/dev/dockerman/src/components/Status.js":"6","/home/nick/dev/dockerman/src/components/Display.js":"7","/home/nick/dev/dockerman/src/components/Footer.js":"8","/home/nick/dev/dockerman/src/components/Container.js":"9","/home/nick/dev/dockerman/src/components/Containers.js":"10","/home/nick/dev/dockerman/src/components/api/container.js":"11","/home/nick/dev/dockerman/src/Routes.js":"12","/home/nick/dev/dockerman/src/page/ContainerPage.js":"13","/home/nick/dev/dockerman/src/page/MainPage.js":"14","/home/nick/dev/dockerman/src/page/LoginPage.js":"15","/home/nick/dev/dockerman/src/components/api/login.js":"16","/home/nick/dev/dockerman/src/components/useToken.js":"17"},{"size":658,"mtime":1612117584047,"results":"18","hashOfConfig":"19"},{"size":324,"mtime":1612117843998,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1610780794789,"results":"21","hashOfConfig":"19"},{"size":241,"mtime":1611991859622,"results":"22","hashOfConfig":"19"},{"size":222,"mtime":1612226446861,"results":"23","hashOfConfig":"19"},{"size":2132,"mtime":1612228559600,"results":"24","hashOfConfig":"19"},{"size":594,"mtime":1612032926382,"results":"25","hashOfConfig":"19"},{"size":197,"mtime":1611258928521,"results":"26","hashOfConfig":"19"},{"size":693,"mtime":1612229745535,"results":"27","hashOfConfig":"19"},{"size":396,"mtime":1611554407513,"results":"28","hashOfConfig":"19"},{"size":1317,"mtime":1612230386387,"results":"29","hashOfConfig":"19"},{"size":1069,"mtime":1612120663677,"results":"30","hashOfConfig":"19"},{"size":527,"mtime":1612230725444,"results":"31","hashOfConfig":"19"},{"size":195,"mtime":1612082007404,"results":"32","hashOfConfig":"19"},{"size":1327,"mtime":1612132887900,"results":"33","hashOfConfig":"19"},{"size":544,"mtime":1612143838299,"results":"34","hashOfConfig":"19"},{"size":528,"mtime":1612120829943,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"12zq7o2",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"/home/nick/dev/dockerman/src/index.js",["75"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport { homepage } from '../package.json';\n\nReactDOM.render(\n  <Router basename={homepage}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["76","77"],"/home/nick/dev/dockerman/src/App.js",[],"/home/nick/dev/dockerman/src/reportWebVitals.js",[],"/home/nick/dev/dockerman/src/components/Header.js",[],"/home/nick/dev/dockerman/src/components/Button.js",[],"/home/nick/dev/dockerman/src/components/Status.js",["78","79","80","81","82","83","84","85","86","87","88","89"],"import Button from './Button';\nimport { useState, useEffect } from 'react';\nimport { startContainer, stopContainer, fetchContainerInfo } from './api/container';\n\n\nconst Status = ({ containerState, id }) => {\n\n    const [state, setState] = useState(containerState);\n    \n    const getContainerState = async (expect = \"\") => {\n        let container = await fetchContainerInfo(id);\n        let status = container.State.Status;\n        if (expect == \"\" || expect == status ){\n            setState(status);\n        }\n        return status;\n    }\n\n    useEffect(() => {\n        getContainerState();\n    }, []);\n\n    const getState = (state) => {\n        console.log(\"state in getState: \" + state);\n        return state === 'running' ? 'âœ…' : 'ðŸ›‘' ;\n    }\n\n    const stopOnClick = async (id) => {\n        const expected = \"exited\";\n\n        stopContainer(id);\n        let status = await getContainerState(expected);\n\n        if (status != expected) {\n            setState(\"loading\");\n        } \n        while (status != expected) {\n            let status = await getContainerState(expected);\n        }\n    }\n\n    const startOnClick = async (id) => {\n        const expected = \"running\";\n\n        startContainer(id); \n        let status = await getContainerState(expected);\n\n        if (status != expected) {\n            setState(\"loading\");\n        } \n        while (status != expected) {\n            status = await getContainerState(expected);\n        }\n    }\n\n    const setButton = (status, id) => {\n        switch (status) {\n            case 'running': \n                return <Button color='red' text='stop' onClick={() => { stopOnClick(id) }} />;\n                break;\n            case 'exited':\n                return <Button color='green' text='start' onClick={() => { startOnClick(id) }}/>\n                break;\n            case 'loading':\n                return <Button color='grey' text='loading...' disabled={true} />\n                break; \n        }\n    }\n\n    return (\n        <>\n            status: {getState(state)} <small>({state})</small>\n            {setButton(state, id)}\n        </>\n    )\n}\n\nexport default Status\n","/home/nick/dev/dockerman/src/components/Display.js",[],"/home/nick/dev/dockerman/src/components/Footer.js",[],"/home/nick/dev/dockerman/src/components/Container.js",[],"/home/nick/dev/dockerman/src/components/Containers.js",[],"/home/nick/dev/dockerman/src/components/api/container.js",[],"/home/nick/dev/dockerman/src/Routes.js",["90"],"import React, { useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport useToken from './components/useToken';\n\n/**\n * Import all page components here\n */\nimport MainPage from './page/MainPage';\nimport ContainerPage from './page/ContainerPage';\nimport LoginPage from './page/LoginPage';\n\n// function setToken(userToken) {\n//   sessionStorage.setItem('token', JSON.stringify(userToken));\n// }\n\n// function getToken() {\n//   const tokenString = sessionStorage.getItem('token');\n//   const userToken = JSON.parse(tokenString);\n//   return userToken?.token\n// }\n\n/**\n * All routes go here.\n * Don't forget to import the components above after adding new route.\n */\nconst Routes = () => {\n\n    const { token, setToken } = useToken();\n\n    if(!token) {\n      return <LoginPage setToken={setToken} />\n    }\n\n    return (\n    <Switch>\n        \n        <Route path=\"/container/:containerId\">\n          <ContainerPage />\n        </Route>\n\n        <Route path=\"/\">\n          <MainPage />\n        </Route>\n\n      </Switch>\n    )\n}\n\nexport default Routes;\n","/home/nick/dev/dockerman/src/page/ContainerPage.js",["91"],"/home/nick/dev/dockerman/src/page/MainPage.js",[],"/home/nick/dev/dockerman/src/page/LoginPage.js",[],"/home/nick/dev/dockerman/src/components/api/login.js",["92"],"import { homepage } from '../../../package.json';\n\n// Fetch individual container from API based on ID and return it\nexport const loginUser = async (credentials) => {\n    \n    let response = await fetch(`${homepage}/login`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n    });\n\n    let status = response.status;\n    if (status != 200){\n        alert('ERROR: invalid credentials.');\n    }\n\n    let data = await response.json();\n    return data;\n}","/home/nick/dev/dockerman/src/components/useToken.js",[],{"ruleId":"93","severity":1,"message":"94","line":3,"column":35,"nodeType":"95","messageId":"96","endLine":3,"endColumn":40},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":13,"column":20,"nodeType":"103","messageId":"104","endLine":13,"endColumn":22},{"ruleId":"101","severity":1,"message":"102","line":13,"column":36,"nodeType":"103","messageId":"104","endLine":13,"endColumn":38},{"ruleId":"105","severity":1,"message":"106","line":21,"column":8,"nodeType":"107","endLine":21,"endColumn":10,"suggestions":"108"},{"ruleId":"101","severity":1,"message":"109","line":34,"column":20,"nodeType":"103","messageId":"104","endLine":34,"endColumn":22},{"ruleId":"101","severity":1,"message":"109","line":37,"column":23,"nodeType":"103","messageId":"104","endLine":37,"endColumn":25},{"ruleId":"93","severity":1,"message":"110","line":38,"column":17,"nodeType":"95","messageId":"96","endLine":38,"endColumn":23},{"ruleId":"101","severity":1,"message":"109","line":48,"column":20,"nodeType":"103","messageId":"104","endLine":48,"endColumn":22},{"ruleId":"101","severity":1,"message":"109","line":51,"column":23,"nodeType":"103","messageId":"104","endLine":51,"endColumn":25},{"ruleId":"111","severity":1,"message":"112","line":57,"column":9,"nodeType":"113","messageId":"114","endLine":67,"endColumn":10},{"ruleId":"115","severity":1,"message":"116","line":60,"column":17,"nodeType":"117","messageId":"118","endLine":60,"endColumn":23},{"ruleId":"115","severity":1,"message":"116","line":63,"column":17,"nodeType":"117","messageId":"118","endLine":63,"endColumn":23},{"ruleId":"115","severity":1,"message":"116","line":66,"column":17,"nodeType":"117","messageId":"118","endLine":66,"endColumn":23},{"ruleId":"93","severity":1,"message":"119","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"120","line":9,"column":9,"nodeType":"95","messageId":"96","endLine":9,"endColumn":18},{"ruleId":"101","severity":1,"message":"109","line":15,"column":16,"nodeType":"103","messageId":"104","endLine":15,"endColumn":18},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","no-native-reassign",["121"],"no-negated-in-lhs",["122"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getContainerState'. Either include it or remove the dependency array.","ArrayExpression",["123"],"Expected '!==' and instead saw '!='.","'status' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'useState' is defined but never used.","'container' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},"Update the dependencies array to be: [getContainerState]",{"range":"126","text":"127"},[600,602],"[getContainerState]"]