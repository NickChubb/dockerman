[{"/home/nick/dev/dockerman/src/index.js":"1","/home/nick/dev/dockerman/src/App.js":"2","/home/nick/dev/dockerman/src/reportWebVitals.js":"3","/home/nick/dev/dockerman/src/components/Header.js":"4","/home/nick/dev/dockerman/src/components/Button.js":"5","/home/nick/dev/dockerman/src/components/Status.js":"6","/home/nick/dev/dockerman/src/components/Display.js":"7","/home/nick/dev/dockerman/src/components/Footer.js":"8","/home/nick/dev/dockerman/src/components/Container.js":"9","/home/nick/dev/dockerman/src/components/Containers.js":"10","/home/nick/dev/dockerman/src/components/api/container.js":"11","/home/nick/dev/dockerman/src/Routes.js":"12","/home/nick/dev/dockerman/src/page/ContainerPage.js":"13","/home/nick/dev/dockerman/src/page/MainPage.js":"14","/home/nick/dev/dockerman/src/page/LoginPage.js":"15","/home/nick/dev/dockerman/src/components/api/login.js":"16","/home/nick/dev/dockerman/src/components/useToken.js":"17","/home/nick/dev/dockerman/src/components/InfoField.js":"18","/home/nick/dev/dockerman/src/components/Images.js":"19","/home/nick/dev/dockerman/src/components/api/image.js":"20","/home/nick/dev/dockerman/src/components/Image.js":"21","/home/nick/dev/dockerman/src/components/DisplayImages.js":"22","/home/nick/dev/dockerman/src/components/DisplayContainers.js":"23","/home/nick/dev/dockerman/src/components/SystemInfo.js":"24","/home/nick/dev/dockerman/src/components/api/system.js":"25","/home/nick/dev/dockerman/src/components/api/helpers.js":"26","/home/nick/dev/dockerman/src/components/DisplayRepo.js":"27","/home/nick/dev/dockerman/src/components/Repos.js":"28","/home/nick/dev/dockerman/src/components/Repo.js":"29","/home/nick/dev/dockerman/src/components/DisplayNew.js":"30","/home/nick/dev/dockerman/src/components/Serve.js":"31","/home/nick/dev/dockerman/src/components/api/db.js":"32"},{"size":658,"mtime":1612117584047,"results":"33","hashOfConfig":"34"},{"size":368,"mtime":1613463624079,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1610780794789,"results":"36","hashOfConfig":"34"},{"size":375,"mtime":1614378288166,"results":"37","hashOfConfig":"34"},{"size":222,"mtime":1612226446861,"results":"38","hashOfConfig":"34"},{"size":4045,"mtime":1613694439589,"results":"39","hashOfConfig":"34"},{"size":828,"mtime":1614657657781,"results":"40","hashOfConfig":"34"},{"size":178,"mtime":1612232317317,"results":"41","hashOfConfig":"34"},{"size":703,"mtime":1617123172209,"results":"42","hashOfConfig":"34"},{"size":269,"mtime":1616733881827,"results":"43","hashOfConfig":"34"},{"size":1549,"mtime":1616801430728,"results":"44","hashOfConfig":"34"},{"size":798,"mtime":1614381150597,"results":"45","hashOfConfig":"34"},{"size":563,"mtime":1612230908282,"results":"46","hashOfConfig":"34"},{"size":195,"mtime":1613718460054,"results":"47","hashOfConfig":"34"},{"size":1327,"mtime":1612132887900,"results":"48","hashOfConfig":"34"},{"size":492,"mtime":1616439000308,"results":"49","hashOfConfig":"34"},{"size":528,"mtime":1612120829943,"results":"50","hashOfConfig":"34"},{"size":215,"mtime":1612231160814,"results":"51","hashOfConfig":"34"},{"size":240,"mtime":1613719156622,"results":"52","hashOfConfig":"34"},{"size":459,"mtime":1616438598884,"results":"53","hashOfConfig":"34"},{"size":193,"mtime":1614320463525,"results":"54","hashOfConfig":"34"},{"size":969,"mtime":1614653900829,"results":"55","hashOfConfig":"34"},{"size":1133,"mtime":1616732407850,"results":"56","hashOfConfig":"34"},{"size":918,"mtime":1614383125198,"results":"57","hashOfConfig":"34"},{"size":522,"mtime":1616439035552,"results":"58","hashOfConfig":"34"},{"size":373,"mtime":1614377722219,"results":"59","hashOfConfig":"34"},{"size":918,"mtime":1614718606172,"results":"60","hashOfConfig":"34"},{"size":500,"mtime":1614718594632,"results":"61","hashOfConfig":"34"},{"size":250,"mtime":1614657061973,"results":"62","hashOfConfig":"34"},{"size":2726,"mtime":1614718768136,"results":"63","hashOfConfig":"34"},{"size":2869,"mtime":1617169645787,"results":"64","hashOfConfig":"34"},{"size":608,"mtime":1616992752372,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"12zq7o2",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"69"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"69"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"69"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"69"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"69"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"69"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nick/dev/dockerman/src/index.js",["139"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport { homepage } from '../package.json';\n\nReactDOM.render(\n  <Router basename={homepage}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["140","141"],"/home/nick/dev/dockerman/src/App.js",[],"/home/nick/dev/dockerman/src/reportWebVitals.js",[],"/home/nick/dev/dockerman/src/components/Header.js",[],"/home/nick/dev/dockerman/src/components/Button.js",[],"/home/nick/dev/dockerman/src/components/Status.js",["142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158"],"import Button from './Button';\nimport { useState, useEffect } from 'react';\nimport { startContainer, stopContainer, removeContainer, fetchContainerInfo } from './api/container';\n\n\nconst Status = ({ containerState, id }) => {\n\n    const [state, setState] = useState(containerState);\n    \n    const getContainerState = async (expect = \"\") => {\n        let container = await fetchContainerInfo(id);\n        let status = container.State.Status;\n        if (expect == \"\" || expect == status ){\n            setState(status);\n        }\n        return status;\n    }\n\n    useEffect(() => {\n        getContainerState();\n    }, []);\n\n    const getState = (state) => {\n        console.log(\"state in getState: \" + state);\n        return state === 'running' ? '✅' : '🛑' ;\n    }\n\n    const stopOnClick = async (id) => {\n        const expected = \"exited\";\n\n        stopContainer(id);\n        let status = await getContainerState(expected);\n\n        if (status != expected) {\n            setState(\"loading\");\n        } \n        while (status != expected) {\n            let status = await getContainerState(expected);\n        }\n    }\n\n    const startOnClick = async (id) => {\n        const expected = \"running\";\n\n        startContainer(id); \n        let status = await getContainerState(expected);\n\n        if (status != expected) {\n            setState(\"loading\");\n        } \n        while (status != expected) {\n            status = await getContainerState(expected);\n        }\n    }\n\n    const removeOnClick = async (id) => {\n        const expected = \"running\";\n\n        removeContainer(id); \n        let status = await getContainerState(expected);\n\n        if (status != expected) {\n            setState(status);\n        } \n        while (status == \"removing\") {\n            status = await getContainerState(expected);\n        }\n    }\n\n    const restartOnClick = async (id) => {\n        const expected = \"running\";\n\n        // removeContainer(id); \n        let status = await getContainerState(expected);\n\n        if (status != expected) {\n            setState(status);\n        }\n        while (status == \"restarting\") {\n            status = await getContainerState(expected);\n        }\n    }\n\n    const setButton = (status, id) => {\n        switch (status) {\n            case 'running': \n                return (\n                    <>\n                        <Button color='red' text='stop' onClick={() => { stopOnClick(id) }} />\n                        <Button color='blue' text='Restart' onClick={() => { restartOnClick(id) }} disabled={true}/>\n                    </>\n                );\n                break;\n            case 'exited':\n                return (\n                    <>\n                        <Button color='green' text='start' onClick={() => { startOnClick(id) }}/>\n                        <Button color='black' text='remove' onClick={() => { removeOnClick(id) }}/>\n                    </>\n                );\n                break;\n            case 'loading':\n                return (\n                    <>\n                        <Button color='grey' text='loading...' disabled={true} />\n                        <Button color='blue' text='Restart' onClick={() => { restartOnClick(id) }} disabled={true}/>\n                    </>\n                );\n                break;\n            case 'removing':\n                return (\n                    <>\n                        <Button color='grey' text='loading...' disabled={true} />\n                    </>\n                );\n                break;\n            default:\n                return (\n                    <>\n                        <Button color='black' text='remove' onClick={() => { removeOnClick(id) }}/>\n                        <Button color='blue' text='Restart' onClick={() => { restartOnClick(id) }} disabled={true}/>\n                    </>\n                );\n                break;\n        }\n    }\n\n    return (\n        <>\n            status: {getState(state)} <small>({state})</small>\n            {setButton(state, id)}\n        </>\n    )\n}\n\nexport default Status\n","/home/nick/dev/dockerman/src/components/Display.js",[],"/home/nick/dev/dockerman/src/components/Footer.js",[],"/home/nick/dev/dockerman/src/components/Container.js",["159"],"import Button from './Button';\nimport Status from './Status';\nimport Serve from './Serve';\nimport { Link } from 'react-router-dom';\n\nconst Container = ({container, key}) => {\n\n    const name = container.Names[0].substring(1);\n\n    return (\n        <div className='container'>\n            <Link to={`/container/${name}`}>\n                <h2>{name}</h2>\n            </Link>\n            <div className='container-controls'>\n                <Status state={container.State} id={container.Id} />\n                <Serve ports={container.Ports} id={container.Id} name={name} />\n            </div>\n        </div>\n    )\n}\n\n// Container.defaultProps = {\n//     title: 'Container',\n// }\n\nexport default Container;\n","/home/nick/dev/dockerman/src/components/Containers.js",[],"/home/nick/dev/dockerman/src/components/api/container.js",[],"/home/nick/dev/dockerman/src/Routes.js",["160"],"import React, { useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport useToken from './components/useToken';\n\n/**\n * Import all page components here\n */\nimport MainPage from './page/MainPage';\nimport ContainerPage from './page/ContainerPage';\nimport LoginPage from './page/LoginPage';\n\n/**\n * All routes go here.\n * Don't forget to import the components above after adding new route.\n */\nconst Routes = () => {\n\n    const { token, setToken } = useToken();\n\n    if(!token) {\n      return <LoginPage setToken={setToken} />\n    }\n\n    return (\n    <Switch>\n        \n        <Route path=\"/container/:containerId\">\n          <ContainerPage />\n        </Route>\n\n        <Route path=\"/\">\n          <MainPage />\n        </Route>\n\n      </Switch>\n    )\n}\n\nexport default Routes;\n","/home/nick/dev/dockerman/src/page/ContainerPage.js",["161"],"import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchContainerInfo } from '../components/api/container';\nimport InfoField from '../components/InfoField';\n\n\nconst ContainerPage = () => {\n\n    let { containerId } = useParams();\n    let container = fetchContainerInfo(containerId).then((container) => {console.log(container)});\n\n    return (\n        <div className='display'>\n            <h2>{containerId}</h2>\n            <InfoField title=\"Ports\" />\n            <h3>Logs</h3>\n\n        </div>\n    )\n}\n\nexport default ContainerPage;\n","/home/nick/dev/dockerman/src/page/MainPage.js",[],"/home/nick/dev/dockerman/src/page/LoginPage.js",[],"/home/nick/dev/dockerman/src/components/api/login.js",["162"],"import { homepage } from '../../../package.json';\n\n// \nexport const loginUser = async (credentials) => {\n    \n    let response = await fetch(`${homepage}/api/auth/login`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n    });\n\n    let status = response.status;\n    if (status != 200){\n        alert('ERROR: invalid credentials.');\n    }\n\n    let data = await response.json();\n    return data;\n}","/home/nick/dev/dockerman/src/components/useToken.js",[],"/home/nick/dev/dockerman/src/components/InfoField.js",[],"/home/nick/dev/dockerman/src/components/Images.js",[],"/home/nick/dev/dockerman/src/components/api/image.js",[],"/home/nick/dev/dockerman/src/components/Image.js",[],"/home/nick/dev/dockerman/src/components/DisplayImages.js",[],"/home/nick/dev/dockerman/src/components/DisplayContainers.js",[],"/home/nick/dev/dockerman/src/components/SystemInfo.js",[],"/home/nick/dev/dockerman/src/components/api/system.js",[],"/home/nick/dev/dockerman/src/components/api/helpers.js",[],"/home/nick/dev/dockerman/src/components/DisplayRepo.js",[],"/home/nick/dev/dockerman/src/components/Repos.js",["163"],"import Repo from './Repo.js';\nimport { Link } from 'react-router-dom';\n\nconst Repos = ({ repos }) => {\n    return (\n        <>\n            {\n                repos.legth != 0\n                ?\n                <div className='container'>No Containers, <Link to={'/new'}>click here</Link> to add new Container.</div> \n                : \n                repos.map((repo, i) => (\n                    <Repo key={i} repo={repo} />\n                ))\n            }\n        </>\n    )\n}\n\nexport default Repos;\n","/home/nick/dev/dockerman/src/components/Repo.js",[],"/home/nick/dev/dockerman/src/components/DisplayNew.js",[],"/home/nick/dev/dockerman/src/components/Serve.js",["164","165","166","167","168"],"//import Button from './Button';\nimport { useState, useEffect } from 'react';\nimport { Form, Row, Col, InputGroup, FormControl } from 'react-bootstrap';\nimport { useHistory } from \"react-router-dom\";\nimport { updateService, getService } from './api/db.js';\nimport Button from './Button.js';\n\nconst Serve = ({ ports, id, name }) => {\n\n    let defaultPort = \"0000\";\n\n    const [enabled, setEnabled] = useState(false);\n    const [slug, setSlug] = useState('');\n    const [port, setPort] = useState(defaultPort);\n\n    useEffect(() => {\n        getService(id).then(service => {\n            setSlug(service.slug);\n            setEnabled(service.served);\n        });\n\n    }, []);\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        updateService(id, enabled, slug, port);\n    }\n\n    return (\n        <Form className=\"form\" onSubmit={handleSubmit} inline>\n            {enabled ?\n                <Form.Check \n                    type=\"switch\" \n                    className=\"mb-2 mr-sm-2\" \n                    label=\"Serve\"\n                    id={\"on-switch-\" + id}\n                    onChange={e => {\n                        setEnabled(e.target.checked);\n                    }}\n                    value={enabled}\n                    checked\n                />\n                :\n                <Form.Check \n                    type=\"switch\" \n                    className=\"mb-2 mr-sm-2\" \n                    label=\"Serve\"\n                    id={\"on-switch-\" + id}\n                    onChange={e => {\n                        setEnabled(e.target.checked);\n                    }}\n                />\n            } \n\n            {enabled ? \n                <Form.Control as=\"select\" >\n                    {\n                        ports.map((port) => (\n                            <option>{port.PublicPort}</option>\n                        ))\n                    }\n                </Form.Control> \n                : \n                <Form.Control as=\"select\" disabled >\n                    <option>{defaultPort}</option>\n                </Form.Control>  \n            } \n            on\n            <InputGroup>\n                <InputGroup.Prepend>\n                    <InputGroup.Text>nickchubb.ca/</InputGroup.Text>\n                </InputGroup.Prepend>\n                {enabled \n                    ? \n                    <FormControl \n                        id=\"slug\" \n                        onChange={e => {\n                            setSlug(e.target.value);\n                        }} \n                    /> \n                    : \n                    <FormControl value={slug} id=\"slug\" placeholder={name} disabled />\n                }\n                \n            </InputGroup>\n            \n            <Button variant=\"primary\" color=\"dodgerblue\" type=\"submit\" text=\"update\" />    \n            \n        </Form>\n    )\n}\n\nexport default Serve;\n","/home/nick/dev/dockerman/src/components/api/db.js",[],{"ruleId":"169","severity":1,"message":"170","line":3,"column":35,"nodeType":"171","messageId":"172","endLine":3,"endColumn":40},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":13,"column":20,"nodeType":"179","messageId":"180","endLine":13,"endColumn":22},{"ruleId":"177","severity":1,"message":"178","line":13,"column":36,"nodeType":"179","messageId":"180","endLine":13,"endColumn":38},{"ruleId":"181","severity":1,"message":"182","line":21,"column":8,"nodeType":"183","endLine":21,"endColumn":10,"suggestions":"184"},{"ruleId":"177","severity":1,"message":"185","line":34,"column":20,"nodeType":"179","messageId":"180","endLine":34,"endColumn":22},{"ruleId":"177","severity":1,"message":"185","line":37,"column":23,"nodeType":"179","messageId":"180","endLine":37,"endColumn":25},{"ruleId":"169","severity":1,"message":"186","line":38,"column":17,"nodeType":"171","messageId":"172","endLine":38,"endColumn":23},{"ruleId":"177","severity":1,"message":"185","line":48,"column":20,"nodeType":"179","messageId":"180","endLine":48,"endColumn":22},{"ruleId":"177","severity":1,"message":"185","line":51,"column":23,"nodeType":"179","messageId":"180","endLine":51,"endColumn":25},{"ruleId":"177","severity":1,"message":"185","line":62,"column":20,"nodeType":"179","messageId":"180","endLine":62,"endColumn":22},{"ruleId":"177","severity":1,"message":"178","line":65,"column":23,"nodeType":"179","messageId":"180","endLine":65,"endColumn":25},{"ruleId":"177","severity":1,"message":"185","line":76,"column":20,"nodeType":"179","messageId":"180","endLine":76,"endColumn":22},{"ruleId":"177","severity":1,"message":"178","line":79,"column":23,"nodeType":"179","messageId":"180","endLine":79,"endColumn":25},{"ruleId":"187","severity":1,"message":"188","line":93,"column":17,"nodeType":"189","messageId":"190","endLine":93,"endColumn":23},{"ruleId":"187","severity":1,"message":"188","line":101,"column":17,"nodeType":"189","messageId":"190","endLine":101,"endColumn":23},{"ruleId":"187","severity":1,"message":"188","line":109,"column":17,"nodeType":"189","messageId":"190","endLine":109,"endColumn":23},{"ruleId":"187","severity":1,"message":"188","line":116,"column":17,"nodeType":"189","messageId":"190","endLine":116,"endColumn":23},{"ruleId":"187","severity":1,"message":"188","line":124,"column":17,"nodeType":"189","messageId":"190","endLine":124,"endColumn":23},{"ruleId":"169","severity":1,"message":"191","line":1,"column":8,"nodeType":"171","messageId":"172","endLine":1,"endColumn":14},{"ruleId":"169","severity":1,"message":"192","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":25},{"ruleId":"169","severity":1,"message":"193","line":10,"column":9,"nodeType":"171","messageId":"172","endLine":10,"endColumn":18},{"ruleId":"177","severity":1,"message":"185","line":15,"column":16,"nodeType":"179","messageId":"180","endLine":15,"endColumn":18},{"ruleId":"177","severity":1,"message":"185","line":8,"column":29,"nodeType":"179","messageId":"180","endLine":8,"endColumn":31},{"ruleId":"169","severity":1,"message":"194","line":3,"column":16,"nodeType":"171","messageId":"172","endLine":3,"endColumn":19},{"ruleId":"169","severity":1,"message":"195","line":3,"column":21,"nodeType":"171","messageId":"172","endLine":3,"endColumn":24},{"ruleId":"169","severity":1,"message":"196","line":4,"column":10,"nodeType":"171","messageId":"172","endLine":4,"endColumn":20},{"ruleId":"169","severity":1,"message":"197","line":14,"column":18,"nodeType":"171","messageId":"172","endLine":14,"endColumn":25},{"ruleId":"181","severity":1,"message":"198","line":22,"column":8,"nodeType":"183","endLine":22,"endColumn":10,"suggestions":"199"},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","no-native-reassign",["200"],"no-negated-in-lhs",["201"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getContainerState'. Either include it or remove the dependency array.","ArrayExpression",["202"],"Expected '!==' and instead saw '!='.","'status' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Button' is defined but never used.","'useState' is defined but never used.","'container' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'useHistory' is defined but never used.","'setPort' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["203"],"no-global-assign","no-unsafe-negation",{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},"Update the dependencies array to be: [getContainerState]",{"range":"208","text":"209"},"Update the dependencies array to be: [id]",{"range":"210","text":"211"},[617,619],"[getContainerState]",[668,670],"[id]"]